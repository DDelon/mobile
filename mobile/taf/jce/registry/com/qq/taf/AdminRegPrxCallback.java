// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.3 by WSRD Tencent.
// Generated from `AdminReg.jce'
// **********************************************************************

package com.qq.taf;

public abstract class AdminRegPrxCallback extends com.qq.taf.proxy.ServantProxyCallback
{
    protected String __taf__AdminReg_all[] = 
    {
        "batchPatch",
        "getAllApplicationNames",
        "getAllNodeNames",
        "getAllServerIds",
        "getGroupId",
        "getNodeVesion",
        "getPatchPercent",
        "getProfileTemplate",
        "getServerProfileTemplate",
        "getServerState",
        "loadServer",
        "notifyServer",
        "patchServer",
        "patchSubborn",
        "pingNode",
        "restartServer",
        "shutdownNode",
        "startServer",
        "stopServer"
    };

    protected String sServerEncoding = "GBK";
    public int setServerEncoding(String se){
        sServerEncoding = se;
        return 0;
    }

    public abstract void callback_batchPatch(int _ret, String result);

    public abstract void callback_batchPatch_exception(int _iRet);

    public abstract void callback_getAllApplicationNames(java.util.ArrayList<String> _ret, String result);

    public abstract void callback_getAllApplicationNames_exception(int _iRet);

    public abstract void callback_getAllNodeNames(java.util.ArrayList<String> _ret, String result);

    public abstract void callback_getAllNodeNames_exception(int _iRet);

    public abstract void callback_getAllServerIds(java.util.ArrayList<java.util.ArrayList<String>> _ret, String result);

    public abstract void callback_getAllServerIds_exception(int _iRet);

    public abstract void callback_getGroupId(int _ret, int groupId, String result);

    public abstract void callback_getGroupId_exception(int _iRet);

    public abstract void callback_getNodeVesion(int _ret, String version, String result);

    public abstract void callback_getNodeVesion_exception(int _iRet);

    public abstract void callback_getPatchPercent(int _ret, com.qq.taf.PatchInfo tPatchInfo);

    public abstract void callback_getPatchPercent_exception(int _iRet);

    public abstract void callback_getProfileTemplate(int _ret, String profileTemplate, String resultDesc);

    public abstract void callback_getProfileTemplate_exception(int _iRet);

    public abstract void callback_getServerProfileTemplate(int _ret, String profileTemplate, String resultDesc);

    public abstract void callback_getServerProfileTemplate_exception(int _iRet);

    public abstract void callback_getServerState(int _ret, com.qq.taf.ServerStateDesc state, String result);

    public abstract void callback_getServerState_exception(int _iRet);

    public abstract void callback_loadServer(int _ret, String result);

    public abstract void callback_loadServer_exception(int _iRet);

    public abstract void callback_notifyServer(int _ret, String result);

    public abstract void callback_notifyServer_exception(int _iRet);

    public abstract void callback_patchServer(int _ret, String result);

    public abstract void callback_patchServer_exception(int _iRet);

    public abstract void callback_patchSubborn(int _ret, String result);

    public abstract void callback_patchSubborn_exception(int _iRet);

    public abstract void callback_pingNode(boolean _ret, String result);

    public abstract void callback_pingNode_exception(int _iRet);

    public abstract void callback_restartServer(int _ret, String result);

    public abstract void callback_restartServer_exception(int _iRet);

    public abstract void callback_shutdownNode(int _ret, String result);

    public abstract void callback_shutdownNode_exception(int _iRet);

    public abstract void callback_startServer(int _ret, String result);

    public abstract void callback_startServer_exception(int _iRet);

    public abstract void callback_stopServer(int _ret, String result);

    public abstract void callback_stopServer_exception(int _iRet);

    final public int _onDispatch(String sFuncName, com.qq.taf.ResponsePacket response)
    {

        int iPos = java.util.Arrays.binarySearch(__taf__AdminReg_all, sFuncName);
        if(iPos < 0 || iPos >= 19) return -1; //or throw execption?
        switch(iPos)
        {
            case 0:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_batchPatch_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 2, true);

                callback_batchPatch(_ret, result);
                break;
            }
            case 1:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getAllApplicationNames_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                java.util.ArrayList<String> _ret = new java.util.ArrayList<String>();
                String __var_5 = "";
                ((java.util.ArrayList<String>)_ret).add(__var_5);
                _ret = (java.util.ArrayList<String>) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 1, true);

                callback_getAllApplicationNames(_ret, result);
                break;
            }
            case 2:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getAllNodeNames_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                java.util.ArrayList<String> _ret = new java.util.ArrayList<String>();
                String __var_6 = "";
                ((java.util.ArrayList<String>)_ret).add(__var_6);
                _ret = (java.util.ArrayList<String>) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 1, true);

                callback_getAllNodeNames(_ret, result);
                break;
            }
            case 3:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getAllServerIds_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                java.util.ArrayList<java.util.ArrayList<String>> _ret = new java.util.ArrayList<java.util.ArrayList<String>>();
                java.util.ArrayList<String> __var_7 = new java.util.ArrayList<String>();
                String __var_8 = "";
                ((java.util.ArrayList<String>)__var_7).add(__var_8);
                ((java.util.ArrayList<java.util.ArrayList<String>>)_ret).add(__var_7);
                _ret = (java.util.ArrayList<java.util.ArrayList<String>>) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 1, true);

                callback_getAllServerIds(_ret, result);
                break;
            }
            case 4:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getGroupId_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                int groupId = 0;
                groupId = (int) _is.read(groupId, 2, true);

                String result = "";
                result = (String) _is.read(result, 3, true);

                callback_getGroupId(_ret, groupId, result);
                break;
            }
            case 5:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getNodeVesion_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String version = "";
                version = (String) _is.read(version, 2, true);

                String result = "";
                result = (String) _is.read(result, 3, true);

                callback_getNodeVesion(_ret, version, result);
                break;
            }
            case 6:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getPatchPercent_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                com.qq.taf.PatchInfo tPatchInfo = new com.qq.taf.PatchInfo();
                tPatchInfo = (com.qq.taf.PatchInfo) _is.read(tPatchInfo, 4, true);

                callback_getPatchPercent(_ret, tPatchInfo);
                break;
            }
            case 7:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getProfileTemplate_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String profileTemplate = "";
                profileTemplate = (String) _is.read(profileTemplate, 2, true);

                String resultDesc = "";
                resultDesc = (String) _is.read(resultDesc, 3, true);

                callback_getProfileTemplate(_ret, profileTemplate, resultDesc);
                break;
            }
            case 8:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getServerProfileTemplate_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String profileTemplate = "";
                profileTemplate = (String) _is.read(profileTemplate, 4, true);

                String resultDesc = "";
                resultDesc = (String) _is.read(resultDesc, 5, true);

                callback_getServerProfileTemplate(_ret, profileTemplate, resultDesc);
                break;
            }
            case 9:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getServerState_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                com.qq.taf.ServerStateDesc state = new com.qq.taf.ServerStateDesc();
                state = (com.qq.taf.ServerStateDesc) _is.read(state, 4, true);

                String result = "";
                result = (String) _is.read(result, 5, true);

                callback_getServerState(_ret, state, result);
                break;
            }
            case 10:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_loadServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 4, true);

                callback_loadServer(_ret, result);
                break;
            }
            case 11:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_notifyServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 5, true);

                callback_notifyServer(_ret, result);
                break;
            }
            case 12:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_patchServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 7, true);

                callback_patchServer(_ret, result);
                break;
            }
            case 13:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_patchSubborn_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 6, true);

                callback_patchSubborn(_ret, result);
                break;
            }
            case 14:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_pingNode_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                boolean _ret = false;
                _ret = (boolean) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 2, true);

                callback_pingNode(_ret, result);
                break;
            }
            case 15:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_restartServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 4, true);

                callback_restartServer(_ret, result);
                break;
            }
            case 16:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_shutdownNode_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 2, true);

                callback_shutdownNode(_ret, result);
                break;
            }
            case 17:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_startServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 4, true);

                callback_startServer(_ret, result);
                break;
            }
            case 18:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_stopServer_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                String result = "";
                result = (String) _is.read(result, 4, true);

                callback_stopServer(_ret, result);
                break;
            }
        }
        return 0;
    }
}
