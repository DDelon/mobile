// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.3 by WSRD Tencent.
// Generated from `Node.jce'
// **********************************************************************

package com.qq.taf;

public interface NodePrx
{
    public int addFile(String application, String serverName, String file, com.qq.taf.holder.JceStringHolder result);

    public int addFile(String application, String serverName, String file, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_addFile(com.qq.taf.NodePrxCallback callback, String application, String serverName, String file);

    public void async_addFile(com.qq.taf.NodePrxCallback callback, String application, String serverName, String file, java.util.Map __ctx);


    public int delCache(String sFullCacheName, String sBackupPath, String sKey, com.qq.taf.holder.JceStringHolder result);

    public int delCache(String sFullCacheName, String sBackupPath, String sKey, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_delCache(com.qq.taf.NodePrxCallback callback, String sFullCacheName, String sBackupPath, String sKey);

    public void async_delCache(com.qq.taf.NodePrxCallback callback, String sFullCacheName, String sBackupPath, String sKey, java.util.Map __ctx);


    public int destroyServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int destroyServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_destroyServer(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_destroyServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public com.qq.taf.LoadInfo getLoad();

    public com.qq.taf.LoadInfo getLoad(java.util.Map __ctx);

    public void async_getLoad(com.qq.taf.NodePrxCallback callback);

    public void async_getLoad(com.qq.taf.NodePrxCallback callback, java.util.Map __ctx);


    public String getName();

    public String getName(java.util.Map __ctx);

    public void async_getName(com.qq.taf.NodePrxCallback callback);

    public void async_getName(com.qq.taf.NodePrxCallback callback, java.util.Map __ctx);


    public int getPatchPercent(String application, String serverName, com.qq.taf.PatchInfoHolder tPatchInfo);

    public int getPatchPercent(String application, String serverName, com.qq.taf.PatchInfoHolder tPatchInfo, java.util.Map __ctx);

    public void async_getPatchPercent(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_getPatchPercent(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int getServerPid(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int getServerPid(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_getServerPid(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_getServerPid(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int getSettingState(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int getSettingState(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_getSettingState(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_getSettingState(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int getState(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int getState(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_getState(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_getState(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int loadServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int loadServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_loadServer(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_loadServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int notifyServer(String application, String serverName, String command, com.qq.taf.holder.JceStringHolder result);

    public int notifyServer(String application, String serverName, String command, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_notifyServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, String command);

    public void async_notifyServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, String command, java.util.Map __ctx);


    public int patch(String application, String serverName, boolean shutDown, String patchServer, com.qq.taf.holder.JceStringHolder result);

    public int patch(String application, String serverName, boolean shutDown, String patchServer, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_patch(com.qq.taf.NodePrxCallback callback, String application, String serverName, boolean shutDown, String patchServer);

    public void async_patch(com.qq.taf.NodePrxCallback callback, String application, String serverName, boolean shutDown, String patchServer, java.util.Map __ctx);


    public int patchPro(com.qq.taf.PatchRequest req, com.qq.taf.holder.JceStringHolder result);

    public int patchPro(com.qq.taf.PatchRequest req, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_patchPro(com.qq.taf.NodePrxCallback callback, com.qq.taf.PatchRequest req);

    public void async_patchPro(com.qq.taf.NodePrxCallback callback, com.qq.taf.PatchRequest req, java.util.Map __ctx);


    public int patchSubborn(String patchServer, String application, String serverName, String srcFile, String dstFile, com.qq.taf.holder.JceStringHolder result);

    public int patchSubborn(String patchServer, String application, String serverName, String srcFile, String dstFile, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_patchSubborn(com.qq.taf.NodePrxCallback callback, String patchServer, String application, String serverName, String srcFile, String dstFile);

    public void async_patchSubborn(com.qq.taf.NodePrxCallback callback, String patchServer, String application, String serverName, String srcFile, String dstFile, java.util.Map __ctx);


    public int shutdown(com.qq.taf.holder.JceStringHolder result);

    public int shutdown(com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_shutdown(com.qq.taf.NodePrxCallback callback);

    public void async_shutdown(com.qq.taf.NodePrxCallback callback, java.util.Map __ctx);


    public int startServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int startServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_startServer(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_startServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int stopAllServers(com.qq.taf.holder.JceStringHolder result);

    public int stopAllServers(com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_stopAllServers(com.qq.taf.NodePrxCallback callback);

    public void async_stopAllServers(com.qq.taf.NodePrxCallback callback, java.util.Map __ctx);


    public int stopServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int stopServer(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_stopServer(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_stopServer(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


    public int synState(String application, String serverName, com.qq.taf.holder.JceStringHolder result);

    public int synState(String application, String serverName, com.qq.taf.holder.JceStringHolder result, java.util.Map __ctx);

    public void async_synState(com.qq.taf.NodePrxCallback callback, String application, String serverName);

    public void async_synState(com.qq.taf.NodePrxCallback callback, String application, String serverName, java.util.Map __ctx);


}
