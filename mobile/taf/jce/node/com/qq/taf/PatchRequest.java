// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.3 by WSRD Tencent.
// Generated from `NodeDescriptor.jce'
// **********************************************************************

package com.qq.taf;

public final class PatchRequest extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "taf.PatchRequest";
    }

    public String fullClassName()
    {
        return "com.qq.taf.PatchRequest";
    }

    public String appname = "";

    public String servername = "";

    public String nodename = "";

    public String groupname = "";

    public String binname = "";

    public String version = "";

    public String user = "";

    public String servertype = "";

    public String patchobj = "";

    public String md5 = "";

    public String getAppname()
    {
        return appname;
    }

    public void  setAppname(String appname)
    {
        this.appname = appname;
    }

    public String getServername()
    {
        return servername;
    }

    public void  setServername(String servername)
    {
        this.servername = servername;
    }

    public String getNodename()
    {
        return nodename;
    }

    public void  setNodename(String nodename)
    {
        this.nodename = nodename;
    }

    public String getGroupname()
    {
        return groupname;
    }

    public void  setGroupname(String groupname)
    {
        this.groupname = groupname;
    }

    public String getBinname()
    {
        return binname;
    }

    public void  setBinname(String binname)
    {
        this.binname = binname;
    }

    public String getVersion()
    {
        return version;
    }

    public void  setVersion(String version)
    {
        this.version = version;
    }

    public String getUser()
    {
        return user;
    }

    public void  setUser(String user)
    {
        this.user = user;
    }

    public String getServertype()
    {
        return servertype;
    }

    public void  setServertype(String servertype)
    {
        this.servertype = servertype;
    }

    public String getPatchobj()
    {
        return patchobj;
    }

    public void  setPatchobj(String patchobj)
    {
        this.patchobj = patchobj;
    }

    public String getMd5()
    {
        return md5;
    }

    public void  setMd5(String md5)
    {
        this.md5 = md5;
    }

    public PatchRequest()
    {
        setAppname(appname);
        setServername(servername);
        setNodename(nodename);
        setGroupname(groupname);
        setBinname(binname);
        setVersion(version);
        setUser(user);
        setServertype(servertype);
        setPatchobj(patchobj);
        setMd5(md5);
    }

    public PatchRequest(String appname, String servername, String nodename, String groupname, String binname, String version, String user, String servertype, String patchobj, String md5)
    {
        setAppname(appname);
        setServername(servername);
        setNodename(nodename);
        setGroupname(groupname);
        setBinname(binname);
        setVersion(version);
        setUser(user);
        setServertype(servertype);
        setPatchobj(patchobj);
        setMd5(md5);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        PatchRequest t = (PatchRequest) o;
        return (
            com.qq.taf.jce.JceUtil.equals(appname, t.appname) && 
            com.qq.taf.jce.JceUtil.equals(servername, t.servername) && 
            com.qq.taf.jce.JceUtil.equals(nodename, t.nodename) && 
            com.qq.taf.jce.JceUtil.equals(groupname, t.groupname) && 
            com.qq.taf.jce.JceUtil.equals(binname, t.binname) && 
            com.qq.taf.jce.JceUtil.equals(version, t.version) && 
            com.qq.taf.jce.JceUtil.equals(user, t.user) && 
            com.qq.taf.jce.JceUtil.equals(servertype, t.servertype) && 
            com.qq.taf.jce.JceUtil.equals(patchobj, t.patchobj) && 
            com.qq.taf.jce.JceUtil.equals(md5, t.md5) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(appname, 0);
        _os.write(servername, 1);
        _os.write(nodename, 2);
        _os.write(groupname, 3);
        _os.write(binname, 4);
        _os.write(version, 5);
        _os.write(user, 6);
        _os.write(servertype, 7);
        _os.write(patchobj, 8);
        _os.write(md5, 9);
    }


    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        setAppname( _is.readString(0, true));

        setServername( _is.readString(1, true));

        setNodename( _is.readString(2, true));

        setGroupname( _is.readString(3, true));

        setBinname( _is.readString(4, true));

        setVersion( _is.readString(5, true));

        setUser( _is.readString(6, true));

        setServertype( _is.readString(7, true));

        setPatchobj( _is.readString(8, true));

        setMd5( _is.readString(9, true));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(appname, "appname");
        _ds.display(servername, "servername");
        _ds.display(nodename, "nodename");
        _ds.display(groupname, "groupname");
        _ds.display(binname, "binname");
        _ds.display(version, "version");
        _ds.display(user, "user");
        _ds.display(servertype, "servertype");
        _ds.display(patchobj, "patchobj");
        _ds.display(md5, "md5");
    }

}

