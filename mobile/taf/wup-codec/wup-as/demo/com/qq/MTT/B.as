// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.2 by WSRD Tencent.
// Generated from `Hello.jce'
// **********************************************************************

package com.qq.MTT
{
    import flash.utils.ByteArray;
    import com.qq.taf.jce.DataHelp;
    import com.qq.taf.jce.DataHead;

    public class B
    {
        public var nId:int = 20;
        public var sName:String = "";
        public var vFavor:Array = new Array();
        public var ePet:int = com.qq.MTT.MYE.EM_DOG;
        public var vByte:ByteArray = new ByteArray();
        public var sPhone:String = "";
        public var bMan:Boolean = true;
        public var stA:com.qq.MTT.A = new com.qq.MTT.A();
        public static function writeTo(ost:ByteArray, value:B):void
        {
            DataHelp.writeInt32(ost, value.nId, 0);
            DataHelp.writeString(ost, value.sName, 1);
            DataHelp.writeVectorObject(ost, value.vFavor, 2, DataHelp.writeString);
            DataHelp.writeInt32(ost, value.ePet, 3);
            DataHelp.writeVectorByte(ost, value.vByte, 4);
            DataHelp.writeString(ost, value.sPhone, 6);
            DataHelp.writeBoolean(ost, value.bMan, 7);
            A.writeStruct(ost, value.stA, 9);
        }

        public static function writeStruct(ost:ByteArray, value:Object, tag:int):void
        {
            DataHead.writeTo(ost, tag, DataHead.EM_STRUCTBEGIN);
            B.writeTo(ost,value as B);
            DataHead.writeTo(ost,   0, DataHead.EM_STRUCTEND);
        }

        public static function readFrom(ist:ByteArray):B
        {
            var value:B = new B();
            value.nId=DataHelp.readInt32(ist, 0, true);
            value.sName=DataHelp.readString(ist, 1, true);
            value.vFavor=DataHelp.readVectorObject(ist, 2, false, DataHelp.readString);
            value.ePet=DataHelp.readInt32(ist, 3, false);
            value.vByte=DataHelp.readVectorByte(ist, 4, false);
            value.sPhone=DataHelp.readString(ist, 6, false);
            value.bMan=DataHelp.readBoolean(ist, 7, false);
            value.stA=A.readStruct(ist, 9, false);
            return value;
        }

        public static function readStruct(ist:ByteArray, tag:int, require:Boolean):B
        {
            return DataHelp.readStruct(ist, tag, require, readFrom) as B;
        }
    }

}

