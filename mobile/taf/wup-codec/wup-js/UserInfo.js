// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.1 by WSRD Tencent.
// Generated from `UserInfo.jce'
// **********************************************************************

var TestJCE = TestJCE || {};

TestJCE.CMD_RET_ERR = 100;
TestJCE.CMD_RET_NODATA = 101;
TestJCE.CMD_RET_TIMEOUT = 102;
TestJCE.CMD_RET_WUHAN = "WUHAN";
TestJCE.CMD_RET_SHENZ = "SHENZ";

TestJCE.enSex = 
{
    EN_MALE : 2,
    EN_FEMALE : 3
};

TestJCE.UserBasic = function()
{
    this.sUserID = "";
    this.sUserName = "";
    this.sex = TestJCE.enSex.EN_MALE;
    this.iAge = 0;
    this.sAddress = "";
};
TestJCE.UserBasic.prototype._clone = function () { return new TestJCE.UserBasic(); }
TestJCE.UserBasic.prototype._write = function (os, tag, value) { os.writeStruct(tag, value); }
TestJCE.UserBasic.prototype._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }

TestJCE.UserBasic.prototype.writeTo = function (os)
{
    os.writeString(0, this.sUserID);
    os.writeString(1, this.sUserName);
    os.writeInt32(2, this.sex);
    os.writeInt32(3, this.iAge);
    os.writeString(4, this.sAddress);
};

TestJCE.UserBasic.prototype.readFrom = function (is)
{
    this.sUserID= is.readString(0, false, this.sUserID);
    this.sUserName= is.readString(1, false, this.sUserName);
    this.sex= is.readInt32(2, false, this.sex);
    this.iAge= is.readInt32(3, false, this.iAge);
    this.sAddress= is.readString(4, false, this.sAddress);
};

TestJCE.UserInfo = function()
{
    this.stBasic = new TestJCE.UserBasic();
    this.sToken = "";
};
TestJCE.UserInfo.prototype._clone = function () { return new TestJCE.UserInfo(); }
TestJCE.UserInfo.prototype._write = function (os, tag, value) { os.writeStruct(tag, value); }
TestJCE.UserInfo.prototype._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }

TestJCE.UserInfo.prototype.writeTo = function (os)
{
    os.writeStruct(0, this.stBasic);
    os.writeString(1, this.sToken);
};

TestJCE.UserInfo.prototype.readFrom = function (is)
{
    this.stBasic= is.readStruct(0, false, this.stBasic);
    this.sToken= is.readString(1, false, this.sToken);
};

TestJCE.stTest = function()
{
    this.veci = new Taf.Vector(new Taf.INT32());
    this.vecb = new Taf.BinBuffer();
    this.vecs = new Taf.Vector(new TestJCE.UserInfo());
    this.maps = new Taf.Map(new Taf.INT32(), new TestJCE.UserInfo());
    this.mapm = new Taf.Map(new Taf.INT32(), new Taf.Map(new Taf.INT32(), new TestJCE.UserInfo()));
};
TestJCE.stTest.prototype._clone = function () { return new TestJCE.stTest(); }
TestJCE.stTest.prototype._write = function (os, tag, value) { os.writeStruct(tag, value); }
TestJCE.stTest.prototype._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }

TestJCE.stTest.prototype.writeTo = function (os)
{
    os.writeVector(1, this.veci);
    os.writeBytes(2, this.vecb);
    os.writeVector(3, this.vecs);
    os.writeMap(4, this.maps);
    os.writeMap(5, this.mapm);
};

TestJCE.stTest.prototype.readFrom = function (is)
{
    this.veci= is.readVector(1, false, this.veci);
    this.vecb= is.readBytes(2, false, this.vecb);
    this.vecs= is.readVector(3, false, this.vecs);
    this.maps= is.readMap(4, false, this.maps);
    this.mapm= is.readMap(5, false, this.mapm);
};

