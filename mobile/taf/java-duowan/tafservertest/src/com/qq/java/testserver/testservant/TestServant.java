// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.7.6 by WSRD Tencent.
// Generated from `TestServant.jce'
// **********************************************************************

package com.qq.java.testserver.testservant;

public abstract class TestServant extends com.qq.taf.server.Servant implements ITestServant
{
    private  java.util.Map<String, com.qq.taf.server.ResponseHandler> responseHandlerMap=new java.util.HashMap<String, com.qq.taf.server.ResponseHandler>();

    public TestServant()
    {
        responseHandlerMap.put("testHello", new com.qq.taf.server.ResponseHandler()
        {
            public com.qq.taf.jce.JceOutputStream handle(com.qq.taf.jce.JceInputStream _is, com.qq.taf.server.JceCurrent _jc)
            {
                return response_testHello(_is, _jc);
            }
            public com.qq.jce.wup.UniAttribute handle_wup(com.qq.jce.wup.UniAttribute _unaIn, com.qq.taf.server.JceCurrent _jc)
            {
                return response_testHello_wup(_unaIn, _jc);
            }
        });
        responseHandlerMap.put("testVoid", new com.qq.taf.server.ResponseHandler()
        {
            public com.qq.taf.jce.JceOutputStream handle(com.qq.taf.jce.JceInputStream _is, com.qq.taf.server.JceCurrent _jc)
            {
                return response_testVoid(_is, _jc);
            }
            public com.qq.jce.wup.UniAttribute handle_wup(com.qq.jce.wup.UniAttribute _unaIn, com.qq.taf.server.JceCurrent _jc)
            {
                return response_testVoid_wup(_unaIn, _jc);
            }
        });
    }

    public abstract int testHello(String s, int i, long l, boolean b, byte c, byte [] vt, java.util.Map<String, String> mp, com.qq.java.testserver.testservant.Send send, com.qq.taf.holder.JceStringHolder r, com.qq.taf.server.JceCurrent _jc);

    private com.qq.taf.jce.JceOutputStream response_testHello(com.qq.taf.jce.JceInputStream _is, com.qq.taf.server.JceCurrent _jc)
    {
        com.qq.taf.jce.JceOutputStream _os = null;
        _is.setServerEncoding(getCharacterSet());
        String s = "";
        s = (String) _is.read(s, 1, true);
        int i = 0;
        i = (int) _is.read(i, 2, true);
        long l = 0L;
        l = (long) _is.read(l, 3, true);
        boolean b = false;
        b = (boolean) _is.read(b, 4, true);
        byte c = 0;
        c = (byte) _is.read(c, 5, true);
        byte [] vt = (byte[]) new byte[1];
        byte __var_1 = 0;
        ((byte[])vt)[0] = __var_1;
        vt = (byte []) _is.read(vt, 6, true);
        java.util.Map<String, String> mp = new java.util.HashMap<String, String>();
        String __var_2 = "";
        String __var_3 = "";
        mp.put(__var_2, __var_3);
        mp = (java.util.Map<String, String>) _is.read(mp, 7, true);
        com.qq.java.testserver.testservant.Send send = new com.qq.java.testserver.testservant.Send();
        send = (com.qq.java.testserver.testservant.Send) _is.read(send, 8, true);
        com.qq.taf.holder.JceStringHolder r = new com.qq.taf.holder.JceStringHolder();
        r.value = "";
        r.value = (String) _is.read(r.value, 9, false);
        int _ret = ((ITestServant)getProxy()).testHello(s, i, l, b, c, vt, mp, send, r, _jc);
        if(_jc.isResponse())
        {
            _os = new com.qq.taf.jce.JceOutputStream(0);
            _os.setServerEncoding(getCharacterSet());
            _os.write(_ret, 0);
            _os.write(r.value, 9);
        }
        return _os;
    }

    private com.qq.jce.wup.UniAttribute response_testHello_wup(com.qq.jce.wup.UniAttribute _unaIn, com.qq.taf.server.JceCurrent _jc)
    {
        com.qq.jce.wup.UniAttribute _unaOut = null;
        _unaIn.setEncodeName(getCharacterSet());
        String s = "";
        s = (String) _unaIn.getByClass("s", s);
        int i = 0;
        i = (Integer) _unaIn.getByClass("i", i);
        long l = 0L;
        l = (Long) _unaIn.getByClass("l", l);
        boolean b = false;
        b = (Boolean) _unaIn.getByClass("b", b);
        byte c = 0;
        c = (Byte) _unaIn.getByClass("c", c);
        byte [] vt = (byte[]) new byte[1];
        byte __var_4 = 0;
        ((byte[])vt)[0] = __var_4;
        vt = (byte []) _unaIn.getByClass("vt", vt);
        java.util.Map<String, String> mp = new java.util.HashMap<String, String>();
        String __var_5 = "";
        String __var_6 = "";
        mp.put(__var_5, __var_6);
        mp = (java.util.Map<String, String>) _unaIn.getByClass("mp", mp);
        com.qq.java.testserver.testservant.Send send = new com.qq.java.testserver.testservant.Send();
        send = (com.qq.java.testserver.testservant.Send) _unaIn.getByClass("send", send);
        com.qq.taf.holder.JceStringHolder r = new com.qq.taf.holder.JceStringHolder();
        r.value = "";
        r.value = (String) _unaIn.getByClass("r", r.value, r.value);
        int _ret = ((ITestServant)getProxy()).testHello(s, i, l, b, c, vt, mp, send, r, _jc);
        if(_jc.isResponse())
        {
            _unaOut = new com.qq.jce.wup.UniAttribute();
            _unaOut.setEncodeName(getCharacterSet());
            if(isWup3(_jc)) _unaOut.useVersion3();
            _unaOut.put("",_ret);
            _unaOut.put("r",r.value);
        }
        return _unaOut;
    }

    protected void async_response_testHello(com.qq.taf.server.JceCurrent _jc, int _ret, com.qq.taf.holder.JceStringHolder r)
    {
        if(isWupRequest(_jc)){
            async_response_testHello_wup(_jc, _ret, r);
        }else{
            com.qq.taf.jce.JceOutputStream _os = new com.qq.taf.jce.JceOutputStream(0);
            _os.setServerEncoding(getCharacterSet());
            _os.write(_ret, 0);
            _os.write(r.value, 9);
            sendResponseMessage(_jc, _os);
        }
    }

    protected void async_response_testHello_wup(com.qq.taf.server.JceCurrent _jc, int _ret, com.qq.taf.holder.JceStringHolder r)
    {
        com.qq.jce.wup.UniAttribute _unaOut = new com.qq.jce.wup.UniAttribute();
        _unaOut.setEncodeName(getCharacterSet());
        if(isWup3(_jc)) _unaOut.useVersion3();
        _unaOut.put("",_ret);
        _unaOut.put("r",r.value);
        sendResponseMessage_wup(_jc, _unaOut);
    }

    public abstract void testVoid(String s, int i, long l, boolean b, byte c, byte [] vt, java.util.Map<String, String> mp, com.qq.java.testserver.testservant.Send send, com.qq.taf.holder.JceStringHolder r, com.qq.taf.server.JceCurrent _jc);

    private com.qq.taf.jce.JceOutputStream response_testVoid(com.qq.taf.jce.JceInputStream _is, com.qq.taf.server.JceCurrent _jc)
    {
        com.qq.taf.jce.JceOutputStream _os = null;
        _is.setServerEncoding(getCharacterSet());
        String s = "";
        s = (String) _is.read(s, 1, true);
        int i = 0;
        i = (int) _is.read(i, 2, true);
        long l = 0L;
        l = (long) _is.read(l, 3, true);
        boolean b = false;
        b = (boolean) _is.read(b, 4, true);
        byte c = 0;
        c = (byte) _is.read(c, 5, true);
        byte [] vt = (byte[]) new byte[1];
        byte __var_7 = 0;
        ((byte[])vt)[0] = __var_7;
        vt = (byte []) _is.read(vt, 6, true);
        java.util.Map<String, String> mp = new java.util.HashMap<String, String>();
        String __var_8 = "";
        String __var_9 = "";
        mp.put(__var_8, __var_9);
        mp = (java.util.Map<String, String>) _is.read(mp, 7, true);
        com.qq.java.testserver.testservant.Send send = new com.qq.java.testserver.testservant.Send();
        send = (com.qq.java.testserver.testservant.Send) _is.read(send, 8, true);
        com.qq.taf.holder.JceStringHolder r = new com.qq.taf.holder.JceStringHolder();
        r.value = "";
        r.value = (String) _is.read(r.value, 9, false);
        ((ITestServant)getProxy()).testVoid(s, i, l, b, c, vt, mp, send, r, _jc);
        if(_jc.isResponse())
        {
            _os = new com.qq.taf.jce.JceOutputStream(0);
            _os.setServerEncoding(getCharacterSet());
            
            _os.write(r.value, 9);
        }
        return _os;
    }

    private com.qq.jce.wup.UniAttribute response_testVoid_wup(com.qq.jce.wup.UniAttribute _unaIn, com.qq.taf.server.JceCurrent _jc)
    {
        com.qq.jce.wup.UniAttribute _unaOut = null;
        _unaIn.setEncodeName(getCharacterSet());
        String s = "";
        s = (String) _unaIn.getByClass("s", s);
        int i = 0;
        i = (Integer) _unaIn.getByClass("i", i);
        long l = 0L;
        l = (Long) _unaIn.getByClass("l", l);
        boolean b = false;
        b = (Boolean) _unaIn.getByClass("b", b);
        byte c = 0;
        c = (Byte) _unaIn.getByClass("c", c);
        byte [] vt = (byte[]) new byte[1];
        byte __var_10 = 0;
        ((byte[])vt)[0] = __var_10;
        vt = (byte []) _unaIn.getByClass("vt", vt);
        java.util.Map<String, String> mp = new java.util.HashMap<String, String>();
        String __var_11 = "";
        String __var_12 = "";
        mp.put(__var_11, __var_12);
        mp = (java.util.Map<String, String>) _unaIn.getByClass("mp", mp);
        com.qq.java.testserver.testservant.Send send = new com.qq.java.testserver.testservant.Send();
        send = (com.qq.java.testserver.testservant.Send) _unaIn.getByClass("send", send);
        com.qq.taf.holder.JceStringHolder r = new com.qq.taf.holder.JceStringHolder();
        r.value = "";
        r.value = (String) _unaIn.getByClass("r", r.value, r.value);
        ((ITestServant)getProxy()).testVoid(s, i, l, b, c, vt, mp, send, r, _jc);
        if(_jc.isResponse())
        {
            _unaOut = new com.qq.jce.wup.UniAttribute();
            _unaOut.setEncodeName(getCharacterSet());
            if(isWup3(_jc)) _unaOut.useVersion3();
            
            _unaOut.put("r",r.value);
        }
        return _unaOut;
    }

    protected void async_response_testVoid(com.qq.taf.server.JceCurrent _jc, com.qq.taf.holder.JceStringHolder r)
    {
        if(isWupRequest(_jc)){
            async_response_testVoid_wup(_jc, r);
        }else{
            com.qq.taf.jce.JceOutputStream _os = new com.qq.taf.jce.JceOutputStream(0);
            _os.setServerEncoding(getCharacterSet());
            
            _os.write(r.value, 9);
            sendResponseMessage(_jc, _os);
        }
    }

    protected void async_response_testVoid_wup(com.qq.taf.server.JceCurrent _jc, com.qq.taf.holder.JceStringHolder r)
    {
        com.qq.jce.wup.UniAttribute _unaOut = new com.qq.jce.wup.UniAttribute();
        _unaOut.setEncodeName(getCharacterSet());
        if(isWup3(_jc)) _unaOut.useVersion3();
        
        _unaOut.put("r",r.value);
        sendResponseMessage_wup(_jc, _unaOut);
    }

    protected com.qq.taf.jce.JceOutputStream doResponse(String funcName, com.qq.taf.jce.JceInputStream _is, com.qq.taf.server.JceCurrent _jc)
    {
        return responseHandlerMap.get(funcName).handle(_is, _jc);
    }

    protected com.qq.jce.wup.UniAttribute doResponse_wup(String funcName, com.qq.jce.wup.UniAttribute _unaIn, com.qq.taf.server.JceCurrent _jc)
    {
        return responseHandlerMap.get(funcName).handle_wup(_unaIn, _jc);
    }
}
