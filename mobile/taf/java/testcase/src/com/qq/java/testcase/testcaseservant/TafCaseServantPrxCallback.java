// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.5.7 by WSRD Tencent.
// Generated from `TafCaseServant.jce'
// **********************************************************************

package com.qq.java.testcase.testcaseservant;

public abstract class TafCaseServantPrxCallback extends com.qq.taf.proxy.ServantProxyCallback
{
    protected String __testcaseservant__TafCaseServant_all[] = 
    {
        "getUser",
        "test",
        "testUnsigned"
    };

    protected String sServerEncoding = "GBK";
    public int setServerEncoding(String se){
        sServerEncoding = se;
        return 0;
    }

    public abstract void callback_getUser(int _ret, com.qq.java.testcase.testcaseservant.UserInfo outUser);

    public abstract void callback_getUser_exception(int _iRet);

    public abstract void callback_test(int _ret);

    public abstract void callback_test_exception(int _iRet);

    public abstract void callback_testUnsigned(int _ret, short ubOutUin, int usOutUin, long uiOutUin);

    public abstract void callback_testUnsigned_exception(int _iRet);

    final public int _onDispatch(String sFuncName, com.qq.taf.ResponsePacket response)
    {

        int iPos = java.util.Arrays.binarySearch(__testcaseservant__TafCaseServant_all, sFuncName);
        if(iPos < 0 || iPos >= 3) return -1; //or throw execption?
        switch(iPos)
        {
            case 0:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_getUser_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                com.qq.java.testcase.testcaseservant.UserInfo outUser = new com.qq.java.testcase.testcaseservant.UserInfo();
                outUser = (com.qq.java.testcase.testcaseservant.UserInfo) _is.read(outUser, 2, true);

                callback_getUser(_ret, outUser);
                break;
            }
            case 1:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_test_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                callback_test(_ret);
                break;
            }
            case 2:
            {
                if ( response.iRet != com.qq.taf.cnst.JCESERVERSUCCESS.value )
                {
                    callback_testUnsigned_exception(response.iRet);
                    return response.iRet;
                }
                com.qq.taf.jce.JceInputStream _is = new com.qq.taf.jce.JceInputStream(response.sBuffer);
                _is.setServerEncoding(sServerEncoding);
                int _ret = 0;
                _ret = (int) _is.read(_ret, 0, true);

                short ubOutUin = 0;
                ubOutUin = (short) _is.read(ubOutUin, 4, true);

                int usOutUin = 0;
                usOutUin = (int) _is.read(usOutUin, 5, true);

                long uiOutUin = 0L;
                uiOutUin = (long) _is.read(uiOutUin, 6, true);

                callback_testUnsigned(_ret, ubOutUin, usOutUin, uiOutUin);
                break;
            }
        }
        return 0;
    }
}
