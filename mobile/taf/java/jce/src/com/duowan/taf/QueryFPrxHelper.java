// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.6.1 by WSRD Tencent.
// Generated from `QueryF.jce'
// **********************************************************************

package com.duowan.taf;

public final class QueryFPrxHelper extends com.duowan.taf.proxy.ServantProxy implements QueryFPrx
{

    public QueryFPrxHelper taf_hash(int hashCode)
    {
        super.taf_hash(hashCode);
        return this;
    }

    public java.util.Map __defaultContext()
    {
        java.util.HashMap _ctx = new java.util.HashMap();
        return _ctx;
    }

    protected String sServerEncoding = "GBK";
    public int setServerEncoding(String se){
        sServerEncoding = se;
        return 0;
    }

    public java.util.ArrayList<com.duowan.taf.EndpointF> findObjectById(String id)
    {
        return findObjectById(id, __defaultContext());
    }

    @SuppressWarnings("unchecked")
    public java.util.ArrayList<com.duowan.taf.EndpointF> findObjectById(String id, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        byte[] _returnSBuffer = taf_invoke("findObjectById", _sBuffer, __ctx, status);

        com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
        _is.setServerEncoding(sServerEncoding);
        java.util.ArrayList<com.duowan.taf.EndpointF> _ret = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_1 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)_ret).add(__var_1);
        _ret = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(_ret, 0, true);
        return _ret;
    }

    public void async_findObjectById(com.duowan.taf.QueryFPrxCallback callback, String id)
    {
        async_findObjectById(callback, id, __defaultContext());
    }

    public void async_findObjectById(com.duowan.taf.QueryFPrxCallback callback, String id, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        taf_invokeAsync(callback, "findObjectById", _sBuffer, __ctx, status);

    }

    public int findObjectById4All(String id, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp)
    {
        return findObjectById4All(id, activeEp, inactiveEp, __defaultContext());
    }

    @SuppressWarnings("unchecked")
    public int findObjectById4All(String id, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        if(activeEp.value != null)         _os.write(activeEp.value, 2);
        if(inactiveEp.value != null)         _os.write(inactiveEp.value, 3);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        byte[] _returnSBuffer = taf_invoke("findObjectById4All", _sBuffer, __ctx, status);

        com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
        _is.setServerEncoding(sServerEncoding);
        int _ret = 0;
        _ret = (int) _is.read(_ret, 0, true);
        activeEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_2 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)activeEp.value).add(__var_2);
        activeEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(activeEp.value, 2, true);
        inactiveEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_3 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)inactiveEp.value).add(__var_3);
        inactiveEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(inactiveEp.value, 3, true);
        return _ret;
    }

    public void async_findObjectById4All(com.duowan.taf.QueryFPrxCallback callback, String id)
    {
        async_findObjectById4All(callback, id, __defaultContext());
    }

    public void async_findObjectById4All(com.duowan.taf.QueryFPrxCallback callback, String id, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        taf_invokeAsync(callback, "findObjectById4All", _sBuffer, __ctx, status);

    }

    public int findObjectByIdInSameGroup(String id, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp)
    {
        return findObjectByIdInSameGroup(id, activeEp, inactiveEp, __defaultContext());
    }

    @SuppressWarnings("unchecked")
    public int findObjectByIdInSameGroup(String id, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        if(activeEp.value != null)         _os.write(activeEp.value, 2);
        if(inactiveEp.value != null)         _os.write(inactiveEp.value, 3);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        byte[] _returnSBuffer = taf_invoke("findObjectByIdInSameGroup", _sBuffer, __ctx, status);

        com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
        _is.setServerEncoding(sServerEncoding);
        int _ret = 0;
        _ret = (int) _is.read(_ret, 0, true);
        activeEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_4 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)activeEp.value).add(__var_4);
        activeEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(activeEp.value, 2, true);
        inactiveEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_5 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)inactiveEp.value).add(__var_5);
        inactiveEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(inactiveEp.value, 3, true);
        return _ret;
    }

    public void async_findObjectByIdInSameGroup(com.duowan.taf.QueryFPrxCallback callback, String id)
    {
        async_findObjectByIdInSameGroup(callback, id, __defaultContext());
    }

    public void async_findObjectByIdInSameGroup(com.duowan.taf.QueryFPrxCallback callback, String id, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        taf_invokeAsync(callback, "findObjectByIdInSameGroup", _sBuffer, __ctx, status);

    }

    public int findObjectByIdInSameStation(String id, String sStation, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp)
    {
        return findObjectByIdInSameStation(id, sStation, activeEp, inactiveEp, __defaultContext());
    }

    @SuppressWarnings("unchecked")
    public int findObjectByIdInSameStation(String id, String sStation, com.duowan.taf.holder.JceArrayListHolder activeEp, com.duowan.taf.holder.JceArrayListHolder inactiveEp, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        _os.write(sStation, 2);
        if(activeEp.value != null)         _os.write(activeEp.value, 3);
        if(inactiveEp.value != null)         _os.write(inactiveEp.value, 4);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        byte[] _returnSBuffer = taf_invoke("findObjectByIdInSameStation", _sBuffer, __ctx, status);

        com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
        _is.setServerEncoding(sServerEncoding);
        int _ret = 0;
        _ret = (int) _is.read(_ret, 0, true);
        activeEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_6 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)activeEp.value).add(__var_6);
        activeEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(activeEp.value, 3, true);
        inactiveEp.value = new java.util.ArrayList<com.duowan.taf.EndpointF>();
        com.duowan.taf.EndpointF __var_7 = new com.duowan.taf.EndpointF();
        ((java.util.ArrayList<com.duowan.taf.EndpointF>)inactiveEp.value).add(__var_7);
        inactiveEp.value = (java.util.ArrayList<com.duowan.taf.EndpointF>) _is.read(inactiveEp.value, 4, true);
        return _ret;
    }

    public void async_findObjectByIdInSameStation(com.duowan.taf.QueryFPrxCallback callback, String id, String sStation)
    {
        async_findObjectByIdInSameStation(callback, id, sStation, __defaultContext());
    }

    public void async_findObjectByIdInSameStation(com.duowan.taf.QueryFPrxCallback callback, String id, String sStation, java.util.Map __ctx)
    {
        com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
        _os.setServerEncoding(sServerEncoding);
        _os.write(id, 1);
        _os.write(sStation, 2);
        byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());

        java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();

        taf_invokeAsync(callback, "findObjectByIdInSameStation", _sBuffer, __ctx, status);

    }

}
