// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.3.1 by WSRD Tencent.
// Generated from `StatF.jce'
// **********************************************************************

package com.duowan.taf;


public final class StatFPrxHelper extends com.duowan.taf.proxy.ServantProxy implements StatFPrx {
	public StatFPrxHelper taf_hash(int hashCode) {
		super.taf_hash(hashCode);
		return this;
	}

	public java.util.Map __defaultContext() {
		java.util.HashMap _ctx = new java.util.HashMap();
		return _ctx;
	}

	protected String sServerEncoding = "GBK";

	public int setServerEncoding(String se) {
		sServerEncoding = se;
		return 0;
	}

	public int reportMicMsg(java.util.Map<com.duowan.taf.StatMicMsgHead, com.duowan.taf.StatMicMsgBody> msg, boolean bFromClient) {
		return reportMicMsg(msg, bFromClient, __defaultContext());
	}

	@SuppressWarnings("unchecked")
	public int reportMicMsg(java.util.Map<com.duowan.taf.StatMicMsgHead, com.duowan.taf.StatMicMsgBody> msg,
			boolean bFromClient, java.util.Map __ctx) {
		com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
		_os.setServerEncoding(sServerEncoding);
		_os.write(msg, 1);
		_os.write(bFromClient, 2);
		byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());
		java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();
		byte[] _returnSBuffer;
		_returnSBuffer = taf_invoke("reportMicMsg", _sBuffer, __ctx, status);
		com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
		_is.setServerEncoding(sServerEncoding);
		int _ret = 0;
		_ret = (int) _is.read(_ret, 0, true);
		return _ret;
	}



	public void async_reportMicMsg(com.duowan.taf.StatFPrxCallback callback,
			java.util.Map<com.duowan.taf.StatMicMsgHead, com.duowan.taf.StatMicMsgBody> msg, boolean bFromClient) {
		async_reportMicMsg(callback, msg, bFromClient, __defaultContext());
	}

	public void async_reportMicMsg(com.duowan.taf.StatFPrxCallback callback,
			java.util.Map<com.duowan.taf.StatMicMsgHead, com.duowan.taf.StatMicMsgBody> msg, boolean bFromClient,
			java.util.Map __ctx) {
		com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
		_os.setServerEncoding(sServerEncoding);
		_os.write(msg, 1);
		_os.write(bFromClient, 2);
		byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());
		java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();
		taf_invokeAsync(callback, "reportMicMsg", _sBuffer, __ctx, status);
	}

	public int reportSampleMsg(com.duowan.taf.StatSampleMsg[] msg) {
//		for (StatSampleMsg m : msg) {
//			StringBuilder s = new StringBuilder();
//			m.display(s, 1);
//			System.out.println("report msgs " + s);
//		}
		return reportSampleMsg(msg, __defaultContext());
	}

	@SuppressWarnings("unchecked")
	public int reportSampleMsg(com.duowan.taf.StatSampleMsg[] msg, java.util.Map __ctx) {
		com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
		_os.setServerEncoding(sServerEncoding);
		_os.write(msg, 1);
		byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());
		java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();
		byte[] _returnSBuffer = taf_invoke("reportSampleMsg", _sBuffer, __ctx, status);
		com.duowan.taf.jce.JceInputStream _is = new com.duowan.taf.jce.JceInputStream(_returnSBuffer);
		_is.setServerEncoding(sServerEncoding);
		int _ret = 0;
		_ret = (int) _is.read(_ret, 0, true);
		return _ret;
	}

	public void async_reportSampleMsg(com.duowan.taf.StatFPrxCallback callback, com.duowan.taf.StatSampleMsg[] msg) {
		async_reportSampleMsg(callback, msg, __defaultContext());
	}

	public void async_reportSampleMsg(com.duowan.taf.StatFPrxCallback callback, com.duowan.taf.StatSampleMsg[] msg,
			java.util.Map __ctx) {
		com.duowan.taf.jce.JceOutputStream _os = new com.duowan.taf.jce.JceOutputStream(0);
		_os.setServerEncoding(sServerEncoding);
		_os.write(msg, 1);
		byte[] _sBuffer = com.duowan.taf.jce.JceUtil.getJceBufArray(_os.getByteBuffer());
		java.util.HashMap<String, String> status = new java.util.HashMap<String, String>();
		taf_invokeAsync(callback, "reportSampleMsg", _sBuffer, __ctx, status);
	}
}
