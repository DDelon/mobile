// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.3.1 by WSRD Tencent.
// Generated from `StatF.jce'
// **********************************************************************

package com.duowan.taf;

public final class StatMicMsgBody extends com.duowan.taf.jce.JceStruct
{
    public int count = (int)0;

    public int timeoutCount = (int)0;

    public int execCount = (int)0;

    public java.util.Map<Integer, Integer> intervalCount;

    public long totalRspTime = (long)0;

    public int maxRspTime = (int)0;

    public int minRspTime = (int)0;

    public int getCount()
    {
        return count;
    }

    public void  setCount(int count)
    {
        this.count = count;
    }

    public int getTimeoutCount()
    {
        return timeoutCount;
    }

    public void  setTimeoutCount(int timeoutCount)
    {
        this.timeoutCount = timeoutCount;
    }

    public int getExecCount()
    {
        return execCount;
    }

    public void  setExecCount(int execCount)
    {
        this.execCount = execCount;
    }

    public java.util.Map<Integer, Integer> getIntervalCount()
    {
        return intervalCount;
    }

    public void  setIntervalCount(java.util.Map<Integer, Integer> intervalCount)
    {
        this.intervalCount = intervalCount;
    }

    public long getTotalRspTime()
    {
        return totalRspTime;
    }

    public void  setTotalRspTime(long totalRspTime)
    {
        this.totalRspTime = totalRspTime;
    }

    public int getMaxRspTime()
    {
        return maxRspTime;
    }

    public void  setMaxRspTime(int maxRspTime)
    {
        this.maxRspTime = maxRspTime;
    }

    public int getMinRspTime()
    {
        return minRspTime;
    }

    public void  setMinRspTime(int minRspTime)
    {
        this.minRspTime = minRspTime;
    }

    public StatMicMsgBody()
    {
    }

    public StatMicMsgBody(int count, int timeoutCount, int execCount, java.util.Map<Integer, Integer> intervalCount, long totalRspTime, int maxRspTime, int minRspTime)
    {
        this.count = count;
        this.timeoutCount = timeoutCount;
        this.execCount = execCount;
        this.intervalCount = intervalCount;
        this.totalRspTime = totalRspTime;
        this.maxRspTime = maxRspTime;
        this.minRspTime = minRspTime;
    }

    public boolean equals(Object o)
    {
        StatMicMsgBody t = (StatMicMsgBody) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(count, t.count) && 
            com.duowan.taf.jce.JceUtil.equals(timeoutCount, t.timeoutCount) && 
            com.duowan.taf.jce.JceUtil.equals(execCount, t.execCount) && 
            com.duowan.taf.jce.JceUtil.equals(intervalCount, t.intervalCount) && 
            com.duowan.taf.jce.JceUtil.equals(totalRspTime, t.totalRspTime) && 
            com.duowan.taf.jce.JceUtil.equals(maxRspTime, t.maxRspTime) && 
            com.duowan.taf.jce.JceUtil.equals(minRspTime, t.minRspTime) );
    }

    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        _os.write(count, 0);
        _os.write(timeoutCount, 1);
        _os.write(execCount, 2);
        _os.write(intervalCount, 3);
        _os.write(totalRspTime, 4);
        _os.write(maxRspTime, 5);
        _os.write(minRspTime, 6);
    }

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        count = 0;
        count = (int) _is.read(count, 0, true);

        timeoutCount = 0;
        timeoutCount = (int) _is.read(timeoutCount, 1, true);

        execCount = 0;
        execCount = (int) _is.read(execCount, 2, true);

        intervalCount = new java.util.HashMap<Integer, Integer>();
        Integer __var_4 = 0;
        Integer __var_5 = 0;
        intervalCount.put(__var_4, __var_5);
        intervalCount = (java.util.Map<Integer, Integer>) _is.read(intervalCount, 3, true);

        totalRspTime = 0L;
        totalRspTime = (long) _is.read(totalRspTime, 4, true);

        maxRspTime = 0;
        maxRspTime = (int) _is.read(maxRspTime, 5, true);

        minRspTime = 0;
        minRspTime = (int) _is.read(minRspTime, 6, true);

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(count, "count");
        _ds.display(timeoutCount, "timeoutCount");
        _ds.display(execCount, "execCount");
        _ds.display(intervalCount, "intervalCount");
        _ds.display(totalRspTime, "totalRspTime");
        _ds.display(maxRspTime, "maxRspTime");
        _ds.display(minRspTime, "minRspTime");
    }

}
