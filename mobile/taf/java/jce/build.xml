<?xml version="1.0"?> 
<project name="wap-component" default="usage" basedir="." >
	<!-- +++++++++++++++++++ Begin defines vars +++++++++++++++++++++++ -->
	
	 <!-- build.properties defines global var -->
	 <property file="build.properties"/>  
	  <!-- Construct compile classpath -->
	  <path id="compile.classpath">
		<pathelement location="${dir.build}/classes"/>
	  </path>

	  <patternset id="includeJava">
		<include name="**/*.java"/>
		<exclude name="**/*test.java"  unless="test"/>
		<exclude name="**/test/*.java" unless="test"/>
	  </patternset>

	<!-- +++++++++++++++++++ End defines global var +++++++++++++++++++++++++ -->

	<!-- ================================================================= -->
	<!-- Usage				                                               --> 
	<!-- ================================================================= -->
	<target name="usage">
	<echo>
	These are the targets supported by this ANT build scpript:
	build   -  Complie all java files ,generate javadoc and copy source to build dir.
	javadoc -  Generate javadoc to build dir.
	jar     -  Jar classes,javadoc and src to dist dir.
	dist    -  Clean all tmp file and regenerate jar file to dist.
	clean   -  Remove all generated (compiled) class files.
	</echo>
	</target>

	<!-- ================================================================= -->
	<!-- Initialize variables and director                                 -->
	<!-- ================================================================= -->
	<target name="init"> 
		<delete dir="${dir.build}"/>
		<delete dir="${dir.dist}"  excludes="*.jar"/>
		<mkdir dir="${dir.build}" />
		<mkdir dir="${dir.build}/classes" />
		<mkdir dir="${dir.build}/src" />
		<mkdir dir="${dir.build}/docs" />
		<mkdir dir="${dir.dist}" />
	</target>

	<!-- ================================================================= -->
	<!-- build.Complie all java files ,generate javadoc and copy source to build dir.-->
	<!-- ================================================================= -->
	<target name="build" depends="compile,copysrc,javadoc" description="Complie all java files ,generate javadoc and copy source to build dir."/>

	<!-- ================================================================= -->
	<!-- dist.Clean all tmp file and regenerate jar file to dist.				                                               -->
	<!-- ================================================================= -->
	<target name="dist" depends="init,compile,copysrc,jar" description="Clean all tmp file and regenerate jar file to dist."/>

	<!-- ================================================================= -->
	<!-- jar				                                               -->
	<!-- ================================================================= -->
   <target name="jar" description="Jar classes,javadoc and src to dist dir.">
	    <copy todir="${dir.dist}" filtering="true">
			 <fileset dir="${dir.build}/classes" /> 
	    </copy>
	    <copy todir="${dir.dist}/docs" filtering="true">
			 <fileset dir="${dir.build}/docs"/>
	    </copy>
	    <copy todir="${dir.dist}/src" filtering="true">
			 <fileset dir="${dir.build}/src"/>
	    </copy>
		<jar jarfile="${dir.dist}/jce-${version}.jar" basedir="${dir.dist}" excludes="*.jar" />
		<delete dir="${dir.dist}" includeemptydirs="true" excludes="*.jar"/>
   </target> 

	<!-- ================================================================= -->
	<!-- compile all java file.                                                -->
	<!-- ================================================================= -->
   <target name="compile" depends="init" description="Compile all java file. ">
       <javac srcdir="${dir.src}" destdir="${dir.build}/classes" encoding="utf-8" debug="on"> 
		   <classpath refid="compile.classpath"/>
           <!--patternset refid="includeJava"/--> 
       </javac> 
   </target> 

	<!-- ================================================================= -->
	<!-- copy src			                                               -->
	<!-- ================================================================= -->
   <target name="copysrc" depends="init" description="Copy src file from src to build.">
	   <copy todir="${dir.build}/src" filtering="true">
		 <fileset dir="${dir.src}" includes="**/*.java,*.xml,*.property"/> 
	   </copy>
   </target>

	<!-- ================================================================= -->
	<!-- Clean up temp files				                               -->
	<!-- ================================================================= -->
	<target name="clean" description="Remove all generated (compiled) class files.">
	  <delete dir="${dir.build}"/>
	  <delete dir="${dir.dist}"  excludes="*.jar"/>
	</target> 

  <!-- ================================================================= -->
  <!-- This target builds the javadoc files.                             -->
  <!-- ================================================================= -->
  <target name="javadoc" depends="init" description="Generate javadoc.">
    <mkdir dir="${dir.javadoc}" />
    <javadoc sourcepath="${dir.src}"
             destdir="${dir.javadoc}"
             packagenames="**/*"
             version="true"
             protected="true"
			 encoding="utf-8"
			 docencoding="gbk"
             author="true"
             use="true"
             doctitle="jce version ${version}&lt;br&gt;API Specification"
             windowtitle="jce Version ${version}"
             header="&lt;b&gt;jce ${version}&lt;/b&gt;"
             bottom="Copyright Tencent wap group.">

      <classpath refid="compile.classpath"/>
    </javadoc>
  </target>
</project>