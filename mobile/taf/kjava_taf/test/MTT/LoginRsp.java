// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.5.1 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/MTT_3_25.jce'
// **********************************************************************

package MTT;

public final class LoginRsp extends com.qq.taf.jce.JceStruct
{
    public String className()
    {
        return "MTT.LoginRsp";
    }

    public byte [] sGUID = (byte[]) new byte[1];

    public byte [] vAuth = (byte[]) new byte[1];

    public int iTime = (int)0;

    public java.util.Vector vProxyList = new java.util.Vector();

    public java.util.Vector vRelayList = new java.util.Vector();

    public MTT.UpdateRsp stUpdateRsp = new MTT.UpdateRsp();

    public byte [] getSGUID()
    {
        return sGUID;
    }

    public void  setSGUID(byte [] sGUID)
    {
        this.sGUID = sGUID;
    }

    public byte [] getVAuth()
    {
        return vAuth;
    }

    public void  setVAuth(byte [] vAuth)
    {
        this.vAuth = vAuth;
    }

    public int getITime()
    {
        return iTime;
    }

    public void  setITime(int iTime)
    {
        this.iTime = iTime;
    }

    public java.util.Vector getVProxyList()
    {
        return vProxyList;
    }

    public void  setVProxyList(java.util.Vector vProxyList)
    {
        this.vProxyList = vProxyList;
    }

    public java.util.Vector getVRelayList()
    {
        return vRelayList;
    }

    public void  setVRelayList(java.util.Vector vRelayList)
    {
        this.vRelayList = vRelayList;
    }

    public MTT.UpdateRsp getStUpdateRsp()
    {
        return stUpdateRsp;
    }

    public void  setStUpdateRsp(MTT.UpdateRsp stUpdateRsp)
    {
        this.stUpdateRsp = stUpdateRsp;
    }

    public LoginRsp()
    {
    }

    public LoginRsp(byte [] sGUID, byte [] vAuth, int iTime, java.util.Vector vProxyList, java.util.Vector vRelayList, MTT.UpdateRsp stUpdateRsp)
    {
        this.sGUID = sGUID;
        this.vAuth = vAuth;
        this.iTime = iTime;
        this.vProxyList = vProxyList;
        this.vRelayList = vRelayList;
        this.stUpdateRsp = stUpdateRsp;
    }

    public boolean equals(Object o)
    {
        LoginRsp t = (LoginRsp) o;
        return (
            com.qq.taf.jce.JceUtil.equals(sGUID, t.sGUID) && 
            com.qq.taf.jce.JceUtil.equals(vAuth, t.vAuth) && 
            com.qq.taf.jce.JceUtil.equals(iTime, t.iTime) && 
            com.qq.taf.jce.JceUtil.equals(vProxyList, t.vProxyList) && 
            com.qq.taf.jce.JceUtil.equals(vRelayList, t.vRelayList) && 
            com.qq.taf.jce.JceUtil.equals(stUpdateRsp, t.stUpdateRsp) );
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        try
        {
            _os.write(sGUID, 0);
            _os.write(vAuth, 1);
            _os.write(iTime, 2);
            _os.write(vProxyList, 3);
            _os.write(vRelayList, 4);
            _os.write(stUpdateRsp, 5);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        try
        {
            sGUID = (byte[]) new byte[1];
            byte __var_9 = 0;
            ((byte[])sGUID)[0] = __var_9;
            sGUID = (byte []) _is.read(sGUID, 0, true);

            vAuth = (byte[]) new byte[1];
            byte __var_10 = 0;
            ((byte[])vAuth)[0] = __var_10;
            vAuth = (byte []) _is.read(vAuth, 1, true);

            iTime = 0;
            iTime = (int) _is.read(iTime, 2, true);

            vProxyList = new java.util.Vector();
            String __var_11 = "";
            vProxyList.addElement(__var_11);
            vProxyList = (java.util.Vector) _is.read(vProxyList, 3, true);

            vRelayList = new java.util.Vector();
            String __var_12 = "";
            vRelayList.addElement(__var_12);
            vRelayList = (java.util.Vector) _is.read(vRelayList, 4, true);

            stUpdateRsp = new MTT.UpdateRsp();
            stUpdateRsp = (MTT.UpdateRsp) _is.read(stUpdateRsp, 5, true);

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void display(java.lang.StringBuffer _os, int _level)
    {
    }

}
