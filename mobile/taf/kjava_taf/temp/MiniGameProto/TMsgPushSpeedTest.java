// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.5.1 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/MiniGameProto_new.jce'
// **********************************************************************

package MiniGameProto;

public final class TMsgPushSpeedTest extends com.qq.taf.jce.JceStruct
{
    public String className()
    {
        return "MiniGameProto.TMsgPushSpeedTest";
    }

    public int iSec = (int)0;

    public int iUSec = (int)0;

    public java.util.Vector vecSpeed = new java.util.Vector();

    public int getISec()
    {
        return iSec;
    }

    public void  setISec(int iSec)
    {
        this.iSec = iSec;
    }

    public int getIUSec()
    {
        return iUSec;
    }

    public void  setIUSec(int iUSec)
    {
        this.iUSec = iUSec;
    }

    public java.util.Vector getVecSpeed()
    {
        return vecSpeed;
    }

    public void  setVecSpeed(java.util.Vector vecSpeed)
    {
        this.vecSpeed = vecSpeed;
    }

    public TMsgPushSpeedTest()
    {
    }

    public TMsgPushSpeedTest(int iSec, int iUSec, java.util.Vector vecSpeed)
    {
        this.iSec = iSec;
        this.iUSec = iUSec;
        this.vecSpeed = vecSpeed;
    }

    public boolean equals(Object o)
    {
        TMsgPushSpeedTest t = (TMsgPushSpeedTest) o;
        return (
            com.qq.taf.jce.JceUtil.equals(iSec, t.iSec) && 
            com.qq.taf.jce.JceUtil.equals(iUSec, t.iUSec) && 
            com.qq.taf.jce.JceUtil.equals(vecSpeed, t.vecSpeed) );
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        try
        {
            _os.write(iSec, 0);
            _os.write(iUSec, 1);
            _os.write(vecSpeed, 2);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        try
        {
            iSec = 0;
            iSec = (int) _is.read(iSec, 0, true);

            iUSec = 0;
            iUSec = (int) _is.read(iUSec, 1, true);

            vecSpeed = new java.util.Vector();
            MiniGameProto.TUserSpeed __var_19 = new MiniGameProto.TUserSpeed();
            vecSpeed.addElement(__var_19);
            vecSpeed = (java.util.Vector) _is.read(vecSpeed, 2, true);

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void display(java.lang.StringBuffer _os, int _level)
    {
    }

}
