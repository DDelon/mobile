// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.5.1 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/MiniGameProto_new.jce'
// **********************************************************************

package MiniGameProto;

public final class TZoneInfo extends com.qq.taf.jce.JceStruct
{
    public String className()
    {
        return "MiniGameProto.TZoneInfo";
    }

    public String strZoneName = (String)"";

    public short iZoneID = (short)0;

    public int iOnline = (int)0;

    public int iCapacity = (int)0;

    public short iRoomNum = (short)0;

    public short iGameID = (short)0;

    public byte [] vecOpt = (byte[]) new byte[1];

    public String getStrZoneName()
    {
        return strZoneName;
    }

    public void  setStrZoneName(String strZoneName)
    {
        this.strZoneName = strZoneName;
    }

    public short getIZoneID()
    {
        return iZoneID;
    }

    public void  setIZoneID(short iZoneID)
    {
        this.iZoneID = iZoneID;
    }

    public int getIOnline()
    {
        return iOnline;
    }

    public void  setIOnline(int iOnline)
    {
        this.iOnline = iOnline;
    }

    public int getICapacity()
    {
        return iCapacity;
    }

    public void  setICapacity(int iCapacity)
    {
        this.iCapacity = iCapacity;
    }

    public short getIRoomNum()
    {
        return iRoomNum;
    }

    public void  setIRoomNum(short iRoomNum)
    {
        this.iRoomNum = iRoomNum;
    }

    public short getIGameID()
    {
        return iGameID;
    }

    public void  setIGameID(short iGameID)
    {
        this.iGameID = iGameID;
    }

    public byte [] getVecOpt()
    {
        return vecOpt;
    }

    public void  setVecOpt(byte [] vecOpt)
    {
        this.vecOpt = vecOpt;
    }

    public TZoneInfo()
    {
    }

    public TZoneInfo(String strZoneName, short iZoneID, int iOnline, int iCapacity, short iRoomNum, short iGameID, byte [] vecOpt)
    {
        this.strZoneName = strZoneName;
        this.iZoneID = iZoneID;
        this.iOnline = iOnline;
        this.iCapacity = iCapacity;
        this.iRoomNum = iRoomNum;
        this.iGameID = iGameID;
        this.vecOpt = vecOpt;
    }

    public boolean equals(Object o)
    {
        TZoneInfo t = (TZoneInfo) o;
        return (
            com.qq.taf.jce.JceUtil.equals(strZoneName, t.strZoneName) && 
            com.qq.taf.jce.JceUtil.equals(iZoneID, t.iZoneID) && 
            com.qq.taf.jce.JceUtil.equals(iOnline, t.iOnline) && 
            com.qq.taf.jce.JceUtil.equals(iCapacity, t.iCapacity) && 
            com.qq.taf.jce.JceUtil.equals(iRoomNum, t.iRoomNum) && 
            com.qq.taf.jce.JceUtil.equals(iGameID, t.iGameID) && 
            com.qq.taf.jce.JceUtil.equals(vecOpt, t.vecOpt) );
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        try
        {
            _os.write(strZoneName, 0);
            _os.write(iZoneID, 1);
            _os.write(iOnline, 2);
            _os.write(iCapacity, 3);
            _os.write(iRoomNum, 4);
            _os.write(iGameID, 5);
            _os.write(vecOpt, 6);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        try
        {
            strZoneName = "";
            strZoneName = (String) _is.read(strZoneName, 0, true);

            iZoneID = 0;
            iZoneID = (short) _is.read(iZoneID, 1, true);

            iOnline = 0;
            iOnline = (int) _is.read(iOnline, 2, true);

            iCapacity = 0;
            iCapacity = (int) _is.read(iCapacity, 3, true);

            iRoomNum = 0;
            iRoomNum = (short) _is.read(iRoomNum, 4, true);

            iGameID = 0;
            iGameID = (short) _is.read(iGameID, 5, true);

            vecOpt = (byte[]) new byte[1];
            byte __var_11 = 0;
            ((byte[])vecOpt)[0] = __var_11;
            vecOpt = (byte []) _is.read(vecOpt, 6, true);

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void display(java.lang.StringBuffer _os, int _level)
    {
    }

}
