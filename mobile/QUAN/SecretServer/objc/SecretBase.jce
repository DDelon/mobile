#include "/home/tafjce/QUAN/UserInfoServer/UserInfoBase.jce"

module QUAN 
{
    //=====================帖子信息相关=============================================

    // 帖子来源
    enum SType {
        FRIEND   = 0,    // 朋友
        FFRIEND  = 1,    // 朋友的朋友
        RECMD    = 2,    // 推荐
        SYS      = 3,    // 系统引导
        ME       = 4,    // 用户自己
        GUIDE    = 5,    // 引导帖
        NONE     = 6     // 没关系
    };

    // 帖子来源
    enum IdType {
        SECRET  = 0,    // 帖子
        CONTENT = 1,   // 内容
    };

    // 赞类型
    enum FavorType {
        FAVORY   = 0,    // 赞
        FAVORN   = 1,    // 取消赞
        REPORTY  = 2,    // 举报
        REPORTN  = 3,    // 取消举报
        REMOVEY  = 4,    // 移除 
        REMOVEN  = 5,    // 取消移除
        CLEANY   = 6,    // 清除
        CLEANN   = 7,    // 取消清除
    };

    // 帖子列表
    struct SecretInfo
    {   
        0  optional long    lSId;            // 帖子ID
        1  optional long    lUId;            // 发帖用户ID
        2  optional int     iColorId;        // 色块ID
        3  optional string  sBitUrl;         // 图URL
        4  optional string  sContent;        // 内容
        5  optional int     iType;           // 来源 SType
        6  optional string  sLocal;          // 地理位置(来源type为推荐时需要来源城市名)
        7  optional int     iFavorNum;       // 赞数
        8  optional int     iCmtNum;         // 评论数
        9  optional bool    isFavor;         // 是否赞
        10 optional bool    isRead;          // 是否已读
        11 optional int     isRemove;        // 是否移除
    };  

    // 评论内容
    struct ContentInfo
    {
        0  optional long    lCId;            // 评论ID
        1  optional long    lSId;            // 父ID
        2  optional long    lUId;            // 评论者ID
        3  optional bool    isFirst;         // 是否楼主
        4  optional string  Time;            // 时间 (YYYY-MM-DD HH:MM)
        5  optional string  sContent;        // 内容
        6  optional int     iFavorNum;       // 赞数
        7  optional bool    isFavor;         // 是否赞
        8  optional int     iPortrait;       // 头像ID
    };

    //=====================查询帖子列表相关=============================================

    // 查询帖子列表请求
    struct SecretListReq
    {
        0 optional UserId                tUserId;     // 用户ID
        1 optional IdRange               tRange;      //返回的ID范围
        2 optional int                   iCount;      // 请求数量
    };

    // 查询帖子列表返回
    struct SecretListRsp
    {
        0 optional int                   iNextBeginId;   // 返回下次请求的开始ID
        1 optional int                   iLockCount;     // 朋友圈未解锁帖子数
        2 optional vector<SecretInfo>    vSecrets;       // 帖子列表       20条
    };


    //=====================查询帖子详情相关=============================================

    // 帖子详情请求  不分页
    struct ContentListReq
    {
        0 optional UserId                tUserId;   // 用户ID
        1 optional long                  lFirstId;  // 帖子发表者ID
        2 optional long                  lSId;      // 帖子ID
    };

    // 帖子详情返回
    struct ContentListRsp
    {
        0 optional int                   iFavorNum;      // 帖子的最新赞数
        1 optional int                   iCmtNum;        // 帖子的最新评论数
        2 optional vector<ContentInfo>   vContents;      // 帖子详情列表
    };

    //=====================发表帖子相关=============================================

    // 发表帖子请求
    struct PostSecretReq
    {
        0 optional UserId                tUserId;     // 用户ID
        1 optional string                sBitUrl;     // 图片url
        2 optional int                   iColorId;    // 色块ID
        3 optional string                sContent;    // 内容
        4 optional string                sLocal;      // 地理位置
        5 optional string                sCoord;      // 坐标
    };

    // 发表帖子返回
    struct PostSecretRsp
    {
        0 optional int                   iStatus;      // 返回结果
    };

    //=====================发表评论相关=============================================

    // 发表评论请求
    struct PostContentReq
    {
        0 optional UserId                tUserId;     // 用户ID
        1 optional long                  lSId;        // 帖子ID
        2 optional long                  lFirstId;    // 帖子ID
        3 optional string                sContent;    // 内容
    };

    // 发表评论返回
    struct PostContentRsp
    {
        0 optional int                   iStatus;     // 返回结果
        1 optional ContentInfo           tContent;    // 评论内容
    };

    //=====================点赞相关=============================================

    // 点赞请求
    struct PostFavorReq
    {
        0 optional UserId                tUserId;     // 用户ID
        1 optional long                  lId;         // ID
        2 optional long                  lSId;        // 如果ID为评论ID需要上传对应的帖子ID
        3 optional int                   iType;       // 类型 0 帖子   1 评论
        4 optional int                   iOp;         // 类型 0 赞     1 取消赞
        5 optional long                  lFavoredId;  // 被赞评论对应的帖子的作者ID 
    };

    // 点赞返回
    struct PostFavorRsp
    {
        0 optional int                   iStatus;     // 返回结果
    };

    //=====================举报相关=============================================

    // 举报请求
    struct PostReportReq
    {
        0 optional UserId                tUserId;      // 用户ID
        1 optional long                  lSId;         // 帖子ID
        2 optional long                  lReportedId;  // 被举报用户ID 
    };

    // 举报返回
    struct PostReportRsp
    {
        0 optional int                   iStatus;     // 返回结果
    };

    //=====================清除痕迹相关=============================================

    // 清除痕迹请求
    struct CleanTrailReq
    {
        0 optional UserId                tUserId;     // 用户ID
    };

    // 清除痕迹返回
    struct CleanTrailRsp
    {
        0 optional int                   iStatus;     // 返回结果
    };

    //=====================移除帖子相关=============================================

    // 移除帖子请求
    struct RemoveSecretReq
    {
        0 optional UserId                tUserId;     // 用户ID
        1 optional long                  lUId;        // 被移除用户ID
        2 optional long                  lSId;        // 被移除帖子ID
    };

    // 移除帖子返回
    struct RemoveSecretRsp
    {
        0 optional int                   iStatus;     // 返回结果
    };
};
