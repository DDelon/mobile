#include "/home/tafjce/QUAN/SecretServer/SecretBase.jce"
module QUAN
{

    interface SecretUi
    {
        int test();

        /**
         * @Breif 审核贴子
         *
         * @Param lSId
         * @Param iLevel 1仅自己可见，其它预留
         *
         * @Returns   
         */
        int auditSecret(vector<long> vSId,int iLevel);

        /**
        * 获取所有秘密列表
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int getAllSecretList(SecretListReq tReq, out SecretListRsp tRsp);

        /**
        * 获取秘密列表
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int getSecretList(SecretListReq tReq, out SecretListRsp tRsp);

        /**
        * 获取内容列表
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int getSecretContent(ContentListReq tReq, out ContentListRsp tRsp);

        /**
        * 发表秘密
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int postSecret(PostSecretReq tReq, out PostSecretRsp tRsp);

        /**
        * 发表评论
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int postContent(PostContentReq tReq, out PostContentRsp tRsp);

        /**
        * 点赞
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int postFavor(PostFavorReq tReq, out PostFavorRsp tRsp);

        /**
        * 举报
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int postReport(PostReportReq tReq, out PostReportRsp tRsp);

        /**
        * 清除痕迹
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int cleanTrail(CleanTrailReq tReq, out CleanTrailRsp tRsp);

        /**
        * 移除帖子
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int removeSecret(RemoveSecretReq tReq, out RemoveSecretRsp tRsp);


        ///////////////////消息相关//////////////////////////////////////////
        //

        /**
        * 获取消息提醒列表
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int getPushMsg(PushMsgReq tReq, out PushMsgRsp tRsp);

        /**
        * 获取消息提醒数
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int getMsgNum(GetMsgNumReq tReq, out GetMsgNumRsp tRsp);
        
        /**
        * 插入消息提醒
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int addMsg(AddMsgReq tReq);

        /**
        * 更新消息提醒状态  (未读变为已读)
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int changeMsgStatus(ChangeMsgReq tReq);


        /**
        * 反馈
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int feedBack(FeedBackReq tReq, out FeedBackRsp tRsp);


        /**
        * 根据帖子ID取帖子内容,内部接口
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int getUserSingleSecret(SglSecretReq tReq, out SglSecretRsp tRsp);



        /**
        * 清楚UserInfo的Cache，内部接口
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int clearUserCache(long lUId);

        /**
        * 获取系统引导帖列表
        * @param tReq      
        * @param tRsp
        * @return int     0成功，-1失败  
        */ 
        int getSystemList(SystemListReq tReq, out SystemListRsp tRsp);

        /**
        * 绑定推送接口
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int bindMsg(BindMsgReq tReq);

        /**
        * @帖子消息提醒
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int atMsg(AtMsgReq tReq);

        /**
        * @ 设置运营账号
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int shareSecret(long lSId,long lShareId);

        /**
        * @ 创建圈子
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int createCircle(CreateCircleReq tReq, out CreateCircleRsp tRsp);

        /**
        * @ 搜索圈子
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int searchCircle(SearchCircleReq tReq, out SearchCircleRsp tRsp);

        /**
        * @ 获取圈子列表
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int getCircle(GetCircleReq tReq, out GetCircleRsp tRsp);

        /**
        * @ 设置关注圈子
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int setCircleConcern(SetCircleReq tReq);

        /**
        * @ 审核圈子
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int auditCircle(long lCircleId, int iAuditState, string sReason);

        /**
        * @ 推荐圈子
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int recommCircle(long lCircleId,int iRecommValue);

        /**
        * @ 获取圈子帖子列表
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */
        int getCircleList(GetCircleListReq tReq, out GetCircleListRsp tRsp);

        /** 
        * @获取用户系统消息
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */  
        int getSysMsg(GetSysMsgReq tReq, out GetSysMsgRsp tRsp);

        /** 
        * @推送消息
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */  
        int pushSysMsg(PushSysMsgReq tReq);

        /** 
        * @取系统消息状态
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */  
        int getNewSysMsg(GetNewSysMsgReq tReq, out GetNewSysMsgRsp tRsp);

        /** 
        * @ 添加地标
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */  
        int addCircleLocation(long lCircleId, CircleLocation tCircleLocation);

        /** 
        * @ 修改地标
        * @param tReq
        * @param tRsp
        * @return int     0成功，-1失败
        */  
        int modifyCircleLocation(long lCircleId, long lCircleLocationId,CircleLocation tCircleLocation);

        /**
        * @Breif 根据帖子ID获取帖子内容
        *
        * @Param lSId
        *
        * @Returns   
        */
        int getSecretById(GetSecretByIdReq tReq, out GetSecretByIdRsp tRsp);

        /**
        * @Breif IM推送消息
        *
        * @Param lSId
        *
        * @Returns   
        */
        int pushImMsg(PushImMsgReq tReq);

        int createCircleByAdmin(CreateCircleReq tReq,vector<CircleLocation> vCircleLocation,out CreateCircleRsp tRsp);
    };
};
